---
export interface Props {
  currentPage: number;
  totalPages: number;
  basePath: string;
  className?: string;
}

const { currentPage, totalPages, basePath, className = '' } = Astro.props;

// Determine if we're using query parameters (search) or path-based pagination
const isQueryPagination = basePath.includes('?');

// Calculate the range of pages to show
const getVisiblePageNumbers = (current: number, total: number) => {
  if (total <= 7) {
    // If 7 or fewer pages, show all
    return Array.from({ length: total }, (_, i) => i + 1);
  }
  
  if (current <= 4) {
    // Near the start
    return [1, 2, 3, 4, 5, null, total];
  }
  
  if (current >= total - 3) {
    // Near the end
    return [1, null, total - 4, total - 3, total - 2, total - 1, total];
  }
  
  // In the middle
  return [1, null, current - 1, current, current + 1, null, total];
};

const visiblePages = getVisiblePageNumbers(currentPage, totalPages);

// Generate proper page URLs based on pagination type
const getPageUrl = (pageNum: number) => {
  if (isQueryPagination) {
    // For search URLs like "/search?q=test&page="
    return `${basePath}${pageNum}`;
  } else {
    // For path-based URLs like "/companies/" or "/companies/2"
    return `${basePath}${pageNum === 1 ? '' : pageNum}`;
  }
};
---

{totalPages > 1 && (
  <nav aria-label="Pagination" class={`my-8 ${className}`}>
    <ul class="flex justify-center space-x-1 text-sm">
      {/* Previous page link */}
      <li>
        {currentPage > 1 ? (
          <a
            href={getPageUrl(currentPage - 1)}
            class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
          >
            <span class="sr-only">Previous</span>
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
          </a>
        ) : (
          <span
            class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed"
          >
            <span class="sr-only">Previous</span>
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
          </span>
        )}
      </li>

      {/* Page numbers */}
      {visiblePages.map((pageNum, index) => 
        pageNum === null ? (
          <li key={`ellipsis-${index}`}>
            <span class="relative inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700">
              &hellip;
            </span>
          </li>
        ) : (
          <li key={`page-${pageNum}`}>
            {pageNum === currentPage ? (
              <span
                class="relative z-10 inline-flex items-center px-4 py-2 border border-primary-500 text-sm font-medium rounded-md text-white bg-primary-600 cursor-default"
                aria-current="page"
              >
                {pageNum}
              </span>
            ) : (
              <a
                href={getPageUrl(pageNum)}
                class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium rounded-md text-gray-700 hover:bg-gray-50"
              >
                {pageNum}
              </a>
            )}
          </li>
        )
      )}

      {/* Next page link */}
      <li>
        {currentPage < totalPages ? (
          <a
            href={getPageUrl(currentPage + 1)}
            class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50"
          >
            <span class="sr-only">Next</span>
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </a>
        ) : (
          <span
            class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-400 bg-gray-100 cursor-not-allowed"
          >
            <span class="sr-only">Next</span>
            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </span>
        )}
      </li>
    </ul>
  </nav>
)}